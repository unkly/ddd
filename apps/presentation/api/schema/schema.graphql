type User {
  id: String!
  email: String!
  name: String!
}

type Post {
  id: String!
  title: String!
  detail: String!
  images: [String!]
  calories: Int
  difficulty: Int!
  createdAt: String!
  user: User!
  materials: [Material!]
}

type Material {
  name: String!
  count: Int!
}

type Community {
  id: String!
  name: String!
  description: String!
  createdAt: String!
  createdBy: User!
  users: [User!]
}

type PageInfo {
  endCorsor: String
  hasNextPage: Boolean!
}

type PostConnection {
  edges: [Post!]!
  pageInfo: PageInfo!
}

type Query {
  users: [User!]
  posts(userId: String, first: Int!, after: String): PostConnection
  communities: [Community!]
}

type ReturnResultPayload {
  result: Boolean!
}

input MaterialInput {
  name: String!
  count: Int!
}

input CreatePostInput {
  id: String!
  title: String!
  detail: String!
  images: [String!]
  calories: Int
  difficulty: Int!
  userId: String!
  materials: [MaterialInput!]
}

type Mutation {
  createPost(input: CreatePostInput!): ReturnResultPayload
}
