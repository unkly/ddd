version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
  serverless-framework: circleci/serverless-framework@2.0.1

jobs:
  build_and_deploy:
    docker:
      - image: cimg/node:20.11.0
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      TURBO_TOKEN: $TURBO_TOKEN
      PNPM_HOME: /home/circleci/.pnpm-store
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: |
            export SHELL=/bin/bash
            curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=8.15.1 sh -
      - run:
          name: Install Dependencies
          command: pnpm install
      - restore_cache:
          keys:
            - pnpm-{{ checksum "pnpm-lock.yaml" }}
      - save_cache:
          key: pnpm-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
      - run:
          name: Build with Turborepo
          command: pnpm turbo build
      - aws-cli/setup
      - serverless-framework/setup
      - run:
          name: generate
          command: pnpm --filter database run generate
      - run:
          name: Deploy
          command: pnpm --filter api run deploy
  domain_test:
    docker:
      - image: cimg/node:20.11.0
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      TURBO_TOKEN: $TURBO_TOKEN
      PNPM_HOME: /home/circleci/.pnpm-store
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: |
            export SHELL=/bin/bash
            curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=8.15.1 sh -
      - run:
          name: Install Dependencies
          command: pnpm install
      - restore_cache:
          keys:
            - pnpm-{{ checksum "pnpm-lock.yaml" }}
      - save_cache:
          key: pnpm-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
      - run:
          name: Build with Turborepo
          command: pnpm turbo build
      - aws-cli/setup
      - serverless-framework/setup
      - run:
          name: generate
          command: pnpm --filter database run generate
      - run:
          name: lint
          command: pnpm --filter domain run lint
      - run:
          name: test
          command: pnpm --filter domain run test
  usecase_test:
    docker:
      - image: cimg/node:20.11.0
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      TURBO_TOKEN: $TURBO_TOKEN
      PNPM_HOME: /home/circleci/.pnpm-store
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: |
            export SHELL=/bin/bash
            curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=8.15.1 sh -
      - run:
          name: Install Dependencies
          command: pnpm install
      - restore_cache:
          keys:
            - pnpm-{{ checksum "pnpm-lock.yaml" }}
      - save_cache:
          key: pnpm-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
      - run:
          name: Build with Turborepo
          command: pnpm turbo build
      - aws-cli/setup
      - serverless-framework/setup
      - run:
          name: generate
          command: pnpm --filter database run generate
      - run:
          name: lint
          command: pnpm --filter usecase run lint
      - run:
          name: test
          command: pnpm --filter usecase run test
  api_test:
    docker:
      - image: cimg/node:20.11.0
    environment:
      AWS_DEFAULT_REGION: ap-northeast-1
      TURBO_TOKEN: $TURBO_TOKEN
      PNPM_HOME: /home/circleci/.pnpm-store
    steps:
      - checkout
      - run:
          name: Install pnpm
          command: |
            export SHELL=/bin/bash
            curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=8.15.1 sh -
      - run:
          name: Install Dependencies
          command: pnpm install
      - restore_cache:
          keys:
            - pnpm-{{ checksum "pnpm-lock.yaml" }}
      - save_cache:
          key: pnpm-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - ~/.pnpm-store
      - run:
          name: Build with Turborepo
          command: pnpm turbo build
      - aws-cli/setup
      - serverless-framework/setup
      - run:
          name: generate
          command: pnpm --filter database run generate
      - run:
          name: lint
          command: pnpm --filter api run lint
      - run:
          name: test
          command: pnpm --filter api run test

workflows:
  deploy:
    jobs:
      - build_and_deploy:
          filters:
            branches:
              only: develop
  api_test:
    jobs:
      - api_test
  domain_test:
    jobs:
      - domain_test
  usecase_test:
    jobs:
      - usecase_test
